version: "3.8"

services:
  tasks-api:
    build: ./tasks-api
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /var/log/tasks-api:/var/log/tasks-api

  users-api:
    build: ./users-api
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /var/log/users-api:/var/log/users-api

  events-api:
    build: ./events-api
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=development
    volumes:
      - /var/log/events-api:/var/log/events-api

  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - tasks-api
      - users-api
      - events-api

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.13.4
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/log/nginx:/var/log/nginx
      - /var/log/users-api:/var/log/users-api
      - /var/log/tasks-api:/var/log/tasks-api
      - /var/log/events-api:/var/log/events-api
      - ./wait-for-kibana.sh:/wait-for-kibana.sh
    entrypoint:
      ["/wait-for-kibana.sh", "http://kibana:5601/api/status", "filebeat", "-e"]
    depends_on:
      - nginx
      - users-api
      - tasks-api
      - events-api
      - elasticsearch
      - kibana

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    environment:
      - discovery.type=single-node
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - XPACK_SECURITY_ENABLED=false
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5601
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  mongo_data:
  es_data:
