{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple API documentation for the Flask application using JWT and SQLite.",
        "version": "1.0.0",
        "title": "Sample Flask API"
    },
    "host": "localhost:5000",
    "basePath": "/",
    "schemes": ["http"],
    "paths": {
        "/login": {
            "post": {
                "tags": ["Autenticação"],
                "summary": "Logar usuário",
                "description": "Rota para autenticação de usuário, que verifica o username e password, e retorna um token se forem válidos.",
                "operationId": "loginUser",
                "consumes": ["application/x-www-form-urlencoded"],
                "produces": ["text/html"],
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "description": "Nome de usuário",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "Senha do usuário",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autenticação realizada com sucesso",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "html": {
                                    "type": "string",
                                    "description": "Página HTML de conteúdo após login"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Nome de usuário ou senha inválidos",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "html": {
                                    "type": "string",
                                    "description": "Página HTML de erro"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Home Page",
                "description": "Returns a simple Hello World message.",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of message.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Fetch Users",
                "description": "Retrieves a list of users.",
                "responses": {
                    "200": {
                        "description": "List of users fetched successfully.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create User",
                "description": "Creates a new user with provided data.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Fetch a User",
                "description": "Retrieves a user by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "ID of the user to fetch."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User fetched successfully.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update User",
                "description": "Updates an existing user with provided data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "ID of the user to update."
                    },
                    {
                        "in": "body",
                        "name": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete User",
                "description": "Deletes a user by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "ID of the user to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "summary": "Fetch tasks",
                "description": "Retrieves a list of tasks.",
                "responses": {
                    "200": {
                        "description": "List of tasks fetched successfully.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Task"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Task",
                "description": "Creates a new task with provided data.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "task",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task created successfully.",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "summary": "Fetch a Task",
                "description": "Retrieves a task by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "ID of the task to fetch."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task fetched successfully.",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Task",
                "description": "Updates an existing task with provided data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "ID of the task to update."
                    },
                    {
                        "in": "body",
                        "name": "task",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Task",
                "description": "Deletes a task by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "ID of the task to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "required": ["name", "email", "password"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Task": {
            "type": "object",
            "required": ["text", "status"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "text": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        }
    }
}
